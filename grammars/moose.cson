'scopeName': 'input.moose'
'fileTypes': [
  'i'
]
'foldingStartMarker': '(^\\s*/\\*|(\\{|\\[|\\()\\s*$)'
'foldingStopMarker': '(\\*/|^\\s*(\\}|\\]|\\)))'
'name': 'MOOSE Input'
'patterns': [
  {
    'include': '#line_comment'
  }
  {
    'match': '(\\[)(Bounds|Mesh|MeshModifiers|Kernels|AuxKernels|ScalarKernels|AuxScalarKernels|Variables|AuxVariables|Materials|Postprocessors|BCs|ICs|Executioner|Outputs|Problem|Debug|Preconditioning|UserObjects|Functions|GlobalParams|VectorPostprocessors|Dampers|DiracKernels|DGKernels|Constraints|NodalNormals|CoupledProblems|DeprecatedBlock|MultiApps|Transfers)(\\])'
    'captures':
      '1':
        'name': 'keyword.operator.moose'
      '2':
        'name': 'keyword.control.moose'
      '3':
        'name': 'keyword.operator.moose'
  }
  {
    'match': '(\\[\\.\\/)(TimeStepper|TimePeriods|Quadrature|Predictor|Adaptivity|Indicators|Markers|Periodic|InitialCondition|MortarInterfaces)(\\])'
    'captures':
      '1':
        'name': 'keyword.operator.moose'
      '2':
        'name': 'keyword.control.moose'
      '3':
        'name': 'keyword.operator.moose'
  }
  {
    'match': '(\\[\\.*/*)(.*)(\\])'
    'captures':
      '1':
        'name': 'keyword.operator.moose'
      '2':
        'name': 'support.function.moose'
      '3':
        'name': 'keyword.operator.moose'
  }
  {
    'match': '\\b(type)\\s*(=)\\s*(.*)'
    'captures':
      '1':
        'name': 'keyword.control.moose'
      '2':
        'name': 'keyword.operator.moose'
      '3':
        'name': 'entity.name.function.moose'
  }
  {
    'match': '\\[(\\.+/)\\]'
    'captures':
      '1':
        'name': 'keyword.operator.moose'
  }
  {
    'match': '(\\[\\])'
    'captures':
      '1':
        'name': 'keyword.operator.moose'
  }
  {
    'match': '\\border\\s*(=)\\s*(CONSTANT|FIRST|SECOND|THIRD|FOURTH|FIFTH|SIXTH|SEVENTH|EIGHTH|NINTH)\\b'
    'captures':
      '1':
        'name': 'keyword.operator.assignment.moose'
      '2':
        'name': 'constant.language.moose'
  }
  {
    'match': '\\bfamily\\s*(=)\\s*(LAGRANGE|MONOMIAL|HERMITE|SCALAR|HIERARCHIC|CLOUGH|XYZ|SZABAB|BERNSTEIN|L2_LAGRANGE|L2_HIERARCHIC)\\b'
    'captures':
      '1':
        'name': 'keyword.operator.assignment.moose'
      '2':
        'name': 'constant.language.moose'
  }
  {
    'match': '\\belem_type\\s*(=)\\s*(EDGE|EDGE2|EDGE3|EDGE4|QUAD|QUAD4|QUAD8|QUAD9|TRI3|TRI6|HEX|HEX8|HEX20|HEX27|TET4|TET10|PRISM6|PRISM15|PRISM18)\\b'
    'captures':
      '1':
        'name': 'keyword.operator.assignment.moose'
      '2':
        'name': 'constant.language.moose'
  }
  {
    # string parameters
    'begin': '[a-z_A-Z0-9]+\\s*(=)\\s*\''
    'beginCaptures':
      '1':
        'name': 'keyword.operator.assignment.moose'
    'end': '\''
    'patterns': [
      {
        'include': '#numbers'
      }
    ]
  }
  {
    'begin': '[a-z_A-Z0-9]+\\s*(=)\\s*'
    'beginCaptures':
      '1':
        'name': 'keyword.operator.assignment.moose'
    'end': '\n'
    'patterns': [
      {
        'include': '#constants'
      }
      {
        'include': '#numbers'
      }
    ]
  }
  {
    'include': '#strings'
  }
]
'repository':
  'numbers':
    'patterns': [
      {
        'match': '\\b(\\d*\\.\\d+)\\b'
        'captures':
          '1':
            'name': 'constant.numeric.moose'
      }
      {
        'match': '\\b(\\d+e-{0,1}\\d+)\\b'
        'captures':
          '1':
            'name': 'constant.numeric.moose'
      }
      {
        'match': '\\b(\\d*\\.\\d+e-{0,1}\\d+)\\b'
        'captures':
          '1':
            'name': 'constant.numeric.moose'
      }
      {
        'match': '\\b(\\d+)[\\s\\n]'
        'captures':
          '1':
            'name': 'constant.numeric.moose'
      }
    ]
  'constants':
    'patterns': [
      {
        'match': '(?i)\\b(false|true)\\b'
        'name': 'constant.language.moose'
      }
    ]
  'escaped_char':
    'match': '\\\\.'
    'name': 'constant.character.escape.moose'
  'line_comment':
    'patterns': [
      {
        'captures':
          '1':
            'name': 'comment.line.number-sign.moose'
          '2':
            'name': 'punctuation.definition.comment.moose'
        'match': '^((#).*$\\n?)'
        'name': 'meta.comment.full-line.puppet'
      }
      {
        'captures':
          '1':
            'name': 'punctuation.definition.comment.moose'
        'match': '(#).*$\\n?'
        'name': 'comment.line.number-sign.puppet'
      }
    ]
  'single-quoted-string':
    'begin': '\''
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.moose'
    'end': '\''
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.moose'
    'name': 'string.quoted.single.moose'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#numbers'
      }
    ]
  'strings':
    'patterns': [
      {
        'include': '#single-quoted-string'
      }
    ]
