# Template for Indicator

'.source.c':
  'MOOSE indicator':
    'prefix': 'indicator-h'
    'body': """
    #ifndef ${1}_H
    #define ${1}_H

    #include "Indicator.h"

    class ${2};

    template<>
    InputParameters validParams<${2}>();

    /**
     *
     */
    class ${2} : public Indicator
    {
    public:
      ${2}(const InputParameters & parameters);

      virtual void computeIndicator();
    };

    #endif // ${1}_H
    """

'.source.cpp':
  'MOOSE indicator':
    'prefix': 'indicator-c'
    'body': """
    #include "${1}.h"

    template<>
    InputParameters validParams<${1}>()
    {
      InputParameters params = validParams<Indicator>();
      return params;
    }

    ${1}::${1}(const InputParameters & parameters) : Indicator(parameters)
    {
    }

    void
    ${1}::computeIndicator();
    {
    }
    """
